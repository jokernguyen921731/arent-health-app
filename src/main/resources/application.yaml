server:
  port: ${SERVER_PORT:80}
  servlet:
    context-path: ${SERVICE_PATH:/101digital/api/v0}

spring:
  application:
    name: ${SERVICE_NAME:order}
    version: ${VERSION:0.0.1}
  profiles:
    active: ${ENV:local}
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
      WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: false
  swagger:
    enabled: ${ENABLE_SWAGGER:false}
    version: 1.0.0
  datasource:
    url: ${POSTGRESQL_URI:jdbc:postgresql://localhost:5432/postgres?currentSchema=order_coffee}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:123456aA@}
    initialization-mode: always
    hikari:
      connectionTimeout: ${HIRAKI_CONNECTION_POOL:20000}
      maximum-pool-size: ${HIKARI_POOL_SIZE:50}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: ${JPA_GENERATE_DDL:false}
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO_MODE:update}
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        format_sql: true
        generate_statistics: ${JPA_GENERATE_STATISTICS:false}
  liquibase:
    enabled: false
    change-log: classpath:/db/migrations.yaml
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:123456a@}
    timeout: ${REDIS_TIMEOUT:500ms}
  cache:
    redis:
      time-to-live: 60m
      value-format: json
      cache-props:
        oauth2token:
          time-to-live: ${OAUTH2_TOKEN_TTL:45m}
        hubToken:
          time-to-live: ${HUB_TOKEN_TTL:45m}
        client-authority:
          time-to-live: ${CLIENT_TOKEN_TTL:5s}
        user-authority:
          time-to-live: ${USER_AUTH_TOKEN_TTL:5s}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWK_URI:http://localhost:8082/service/jwt/api/v0/.well-known/jwks.json}
  servlet:
    multipart:
      max-file-size: ${MUTIPART_MAX_FILE_SIZE:20MB}
      max-request-size: ${MUTIPART_MAX_REQUEST_SIZE:21MB}

opentracing:
  jaeger:
    enabled: ${JAEGER_ENABLE:true}
    service-name: ${spring.application.name}
    udp-sender:
      host: ${JAEGER_HOST:localhost}
      port: ${JAEGER_PORT:6831}
  spring:
    web:
      client:
        enabled: false

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}

management:
  health:
    defaults:
      enabled: false
  endpoints:
    enabled-by-default: false
    health:
      enabled: false
    web:
      exposure:
        include: []
      cors:
        allowed-origins: ${CORS_ORIGINS:*}
        allowed-methods: ${CORS_METHODS:*}
        allowed-headers: ${CORS_HEADERS:*}
        allow-credentials: ${CORS_CREDENTIALS:false}
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      enabled: true
      probes:
        enabled: true
    info:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: true

app:
  auth:
    root-user:
      fullname: ${ROOT_FULLNAME:admin local}
      username: ${ROOT_USERNAME:adminlocal}
      password: ${ROOT_PASSWORD:123456aA@}
      email: ${ROOT_EMAIL:adminlocal@101digitam.com}
      phone-number: ${ROOT_PHONE_NUMBER:0123456789}